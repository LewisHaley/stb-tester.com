<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>stb-tester articles &amp; releases</title>
  <link href="http://stb-tester.com/" />
  <link rel="self" type="application/atom+xml"
        href="http://stb-tester.com/stb-tester.atom" />
  <id>http://stb-tester.com/stb-tester.atom</id>
  <author>
    <name>The stb-tester project</name>
  </author>
  <updated>2012-08-21T08:00:00Z</updated>

  <entry>
    <title>stb-tester 0.1 release notes: Initial internal release</title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#initial-internal-release" />
    <id>http://stb-tester.com/release-notes.html#initial-internal-release</id>
    <updated>2012-06-21T10:29:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>Initial internal release.</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.1.1 release notes: Initial internal release,
      with packaging fixes
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#initial-internal-release-with-packaging-fixes" />
    <id>http://stb-tester.com/release-notes.html#initial-internal-release-with-packaging-fixes</id>
    <updated>2012-06-21T13:03:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>The difference from 0.1 is that <cite>make install</cite> now works
        correctly from a dist tarball.</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.2 release notes: Adds configurability, IR blaster support
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#adds-configurability-ir-blaster-support" />
    <id>http://stb-tester.com/release-notes.html#adds-configurability-ir-blaster-support</id>
    <updated>2012-07-06T07:24:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>Major changes since 0.1.1:</p>
        <ul class="simple">
        <li>The source &amp; sink gstreamer pipelines, the input &amp; output
        remote control, and the input &amp; output script filename, are all
        configurable.</li>
        <li>Support for LIRC-based infrared emitter &amp; receiver hardware.</li>
        <li>Handle gstreamer errors.</li>
        <li>Automated self-tests.</li>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.3 release notes: Fixes `stbt run` freezing on loss of input
      video
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#fixes-stbt-run-freezing-on-loss-of-input-video" />
    <id>http://stb-tester.com/release-notes.html#fixes-stbt-run-freezing-on-loss-of-input-video</id>
    <updated>2012-07-24T15:05:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>You will still see the blue screen when input video cuts out, but
          now <cite>stbt run</cite> should recover after 5 - 10 seconds and
          continue running the test script.</p>
        <p>Other changes since 0.2:</p>
        <ul class="simple">
          <li>Fix VirtualRemote recorder.</li>
          <li>Clearer error messages on VirtualRemote failure to connect.</li>
          <li>Added <cite>certainty</cite> optional argument to
            <cite>press_until_match</cite> (<cite>wait_for_match</cite> already
            takes <cite>certainty</cite>).</li>
          <li><cite>man stbt</cite> documents the optional arguments to
            <cite>wait_for_match</cite> and <cite>press_until_match</cite>.</li>
        </ul>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.4 release notes: Adds gstreamer plugin, improved
      templatematch, motion detection
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#adds-gstreamer-plugin-improved-templatematch-motion-detection" />
    <id>http://stb-tester.com/release-notes.html#adds-gstreamer-plugin-improved-templatematch-motion-detection</id>
    <updated>2012-08-14T12:55:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>New &quot;libgst-stb-tester.so&quot; gstreamer plugin with
          stbt-templatematch (copied from gst-plugins-bad and improved) and
          stbt-motiondetect elements.</p>
        <p>stbt scripts can use &quot;wait_for_motion&quot; to assert that
          video is playing. &quot;wait_for_motion&quot; takes an optional
          &quot;mask&quot; parameter (a black-and-white image where white
          pixels indicate the regions to check for motion).</p>
        <p>The improved templatematch is more robust in the presence of noise,
          and can detect small but significant changes against large template
          images.</p>
        <p>Other changes since 0.3:</p>
        <ul class="simple">
          <li>Bash-completion script for stbt.</li>
          <li>stbt no longer reads configuration from $PWD/stbt.conf.</li>
          <li>extra/jenkins-stbt-run is a shell script that illustrates how to
            use Jenkins (a continuous-integration system with a web interface)
            to schedule stbt tests and report on their results. See commit
            message d5e7983 for instructions.</li>
        </ul>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.5 release notes: `make install` installs
      stbt{-run,-record,.py} into $libexecdir
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#make-install-installs-stbt-run-record-py-into-libexecdir" />
    <id>http://stb-tester.com/release-notes.html#make-install-installs-stbt-run-record-py-into-libexecdir</id>
    <updated>2012-08-15T09:08:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>The only difference from 0.4 is this change to install locations,
        for the benefit of packagers.</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.6 release notes: Improves templatematch, adds `--verbose`
      flag, `certainty` renamed to `noise_threshold`
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#improves-templatematch-adds-verbose-flag-certainty-renamed-to-noise-threshold" />
    <id>http://stb-tester.com/release-notes.html#improves-templatematch-adds-verbose-flag-certainty-renamed-to-noise-threshold</id>
    <updated>2012-09-05T16:22:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>The templatematch algorithm is more precise (see commit ee28b8e for
          details). Taking advantage of this, <cite>wait_for_match</cite> now
          waits by default for only one match.</p>
        <p>The optional parameter <cite>certainty</cite> of
          <cite>wait_for_match</cite> and <cite>press_until_match</cite> has
          been removed. Since 0.4 it actually didn't have any effect. It has
          been replaced with the parameter <cite>noise_threshold</cite>, a
          floating-point value between 0 and 1 that defaults to 0.16. Increase
          it to be more tolerant to noise (small differences between the
          desired template and the source video frame).</p>
        <p>Debug output is disabled by default; use <cite>--verbose</cite> or
          <cite>-v</cite> to enable. Use <cite>-v -v</cite> (or
          <cite>-vv</cite>) to enable additional debug, including dumping of
          intermediate images by the stbt-templatematch and stbt-motiondetect
          GStreamer elements (this is extremely verbose, and isn't intended for
          end users).</p>
        <p>libgst-stb-tester.so's <cite>stbt-templatematch</cite> element can
          now be installed alongside libgstopencv.so's
          <cite>templatematch</cite> element.</p>
        <p>MatchTimeout is reported correctly if the GStreamer pipeline failed
          to start due to a v4l2 error (even better would be to detect the v4l2
          error itself).</p>
        <p>Limit the maximum attempts to restart the pipeline in case of
          underrun (e.g. on loss of input video signal). Previously, <cite>stbt
          run</cite> attempted to restart the pipeline infinitely.</p>
        <p>Fix <cite>make install</cite> with Ubuntu's shell (dash).</p>
        <p>Other non-user-visible and trivial changes since 0.5:</p>
        <ul class="simple">
          <li>stbt-templatematch bus bessage's parameter <cite>result</cite> is
            renamed to <cite>match</cite> and is now a boolean.</li>
          <li><cite>make check</cite> returns the correct exit status for
            failing self-tests.</li>
          <li>The bash-completion script completes the <cite>--help</cite>
            flag.</li>
          <li>Fix &quot;unknown property debugDirectory&quot; warning from
            <cite>stbt-templatematch</cite> element.</li>
        </ul>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>
      stb-tester 0.7 release notes: Exposes `detect_match` and `detect_motion`;
      removes `directory` argument, changes image search path
    </title>
    <link rel="alternate"
      href="http://stb-tester.com/release-notes.html#exposes-detect-match-and-detect-motion-removes-directory-argument-changes-image-search-path" />
    <id>http://stb-tester.com/release-notes.html#exposes-detect-match-and-detect-motion-removes-directory-argument-changes-image-search-path</id>
    <updated>2012-10-21T10:20:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>New functions <cite>detect_match</cite> and
          <cite>detect_motion</cite> provide low-level access to all the
          information provided by the <cite>stbt-templatematch</cite> and
          <cite>stbt-motiondetect</cite> GStreamer elements for each frame of
          video processed. To keep your test scripts readable, I recommend
          against using <cite>detect_match</cite> and
          <cite>detect_motion</cite> directly; they are intended for you to
          write helper functions that you can then use in your scripts. For an
          example see <cite>wait_for_match</cite> and
          <cite>wait_for_motion</cite> in stbt.py: They are now implemented in
          terms of <cite>detect_match</cite> and
          <cite>detect_motion</cite>.</p>
        <p><cite>wait_for_match</cite>, <cite>press_until_match</cite> and
          <cite>wait_for_motion</cite> no longer accept the optional
          <cite>directory</cite> argument. In most cases the correct upgrade
          path is simply to not give the <cite>directory</cite> argument from
          your scripts. These functions (plus <cite>detect_match</cite> and
          <cite>detect_motion</cite>) now search for specified template or mask
          images by looking in their caller's directory, then their caller's
          caller's directory, etc. (instead of looking only in their immediate
          caller's directory, or the directory specified as an argument). This
          allows you to write helper functions that take an image filename and
          then call <cite>wait_for_match</cite>. See commit message 4e5cd23c
          for details.</p>
        <p>Bugfixes and minor changes:</p>
        <ul class="simple">
          <li><cite>stbt run</cite> no longer requires an X-Windows display
            (unless you're using an X-Windows sink in your pipeline).</li>
          <li>wait_for_motion and detect_motion visualisation: Detected motion
            is highlighted in red in the output video, and masked-out portions
            of the frameare darkened.</li>
          <li>Additional wait_for_motion logging with <cite>stbt run
            -vv</cite>.</li>
          <li>wait_for_motion fails immediately if a mask is given but not
            found on the filesystem.</li>
          <li>Send an end-of-stream event in the pipeline teardown; this avoids
            corrupted videos when using a source or sink pipeline that records
            video to disk.</li>
          <li>Reset wait_for_match after it fails. (If the user's script caught
            the MatchTimeout exception and continued, the stbt-templatematch
            element used to remain active, consuming CPU and showing the search
            rectangle on the output video.) Same fix for wait_for_motion,
            detect_motion, etc.</li>
          <li><cite>stbt record</cite> now accepts <cite>-v</cite> (or
            <cite>--verbose</cite>) command-line option (<cite>stbt run</cite>
            already did).</li>
          <li><cite>stbt run</cite> throws exceptions for all error conditions
            (instead of exiting with <cite>sys.exit(1)</cite> in some
            cases).</li>
          <li><cite>stbt run</cite> exposes the following exceptions directly
            in the script's namespace (so the script can say <cite>except
            MatchTimeout</cite> instead of <cite>import stbt; except
            stbt.MatchTimeout</cite>): UITestError, UITestFailure,
            MatchTimeout, MotionTimeout, ConfigurationError.</li>
          <li>All functions and classes exposed to user scripts are now fully
            documented in the man page.</li>
          <li>Fixes to the self-tests: <cite>test_record</cite> wasn't
            reporting failures;
            <cite>test_wait_for_match_nonexistent_{template,match}</cite> were
            failing intermittently.</li>
          <li>RPM spec file in extras/</li>
        </ul>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>stbt man page</title>
    <link rel="alternate" href="http://stb-tester.com/stbt.html" />
    <id>http://stb-tester.com/stbt.html</id>
    <updated>2012-08-14T12:38:00Z</updated>
    <summary type="html">
      <![CDATA[
        <p>stbt(1): A video-capture record/playback system for automated testing
          of set-top boxes.</p>
        <p>...</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>Introducing stb-tester</title>
    <link rel="alternate" href="http://stb-tester.com/introduction.html" />
    <id>http://stb-tester.com/introduction.html</id>
    <updated>2012-08-18T15:08:00Z</updated>
    <author>
      <name>David Röthlisberger</name>
    </author>
    <summary type="html">
      <![CDATA[
        <p>stb-tester is an open-source system for automated testing of set-top
        boxes and similar devices.</p>
        <p>stb-tester is a collection of small command-line tools ...</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>stb-tester: Getting started</title>
    <link rel="alternate" href="http://stb-tester.com/getting-started.html" />
    <id>http://stb-tester.com/getting-started.html</id>
    <updated>2012-09-03T06:34:00Z</updated>
    <author>
      <name>David Röthlisberger</name>
    </author>
    <summary type="html">
      <![CDATA[
        <p>The following instructions assume a basic knowledge of the Unix
        command line and of your system's package manager, and that you have
        read <a href="http://stb-tester.com/introduction.html">&quot;Introducing
        stb-tester&quot;</a>.</p>
        <p>...</p>
      ]]>
    </summary>
  </entry>

  <entry>
    <title>Using Jenkins to schedule &amp; report stb-tester scripts</title>
    <link rel="alternate" href="http://stb-tester.com/jenkins.html" />
    <id>http://stb-tester.com/jenkins.html</id>
    <updated>2012-09-23T09:58:00Z</updated>
    <author>
      <name>David Röthlisberger</name>
    </author>
    <summary type="html">
      <![CDATA[
        <p><a href="http://stb-tester.com">stb-tester</a> is an open-source
        command-line tool that runs automated tests against a set-top box or
        similar device by capturing and analysing its video output.
        <a href="http://jenkins-ci.org">Jenkins</a> is an open-source
        &quot;continuous integration&quot; tool with a web interface. Jenkins
        is typically used to run software compilation jobs and associated unit
        tests, but here we will use it to run stb-tester test scripts and
        report on the results.</p>
        <p>...</p>
      ]]>
    </summary>
  </entry>

</feed>
